<div id="rank">
  <% common_stat_classes = "font-time-traveler-pal font-black text-3xl mx-auto text-center" %>
  <.async_result :let={stats} assign={@stats}>
    <:loading>
      <div class="flex justify-center items-center">
        <.spinner size="lg" class="text-brand-500" />
      </div>
    </:loading>
    <:failed :let={_reason}>Failed to load stats</:failed>

    <h1 class="font-time-traveler-pal font-gray text-4xl my-8 mx-auto text-center">
      Rank Over Time
    </h1>
    <h1 class={[common_stat_classes]}>
      Max:
      <span>
        <%!-- <span class={["text-[#{rating_to_color_map(stats[:max_rating])}]"]}> --%>
        #<%= stats[:max_rank] %>
      </span>
    </h1>
    <h1 class={[common_stat_classes]}>
      Min:
      <span>
        <%!-- <span class={["text-[#{rating_to_color_map(stats[:max_rating_7d])}]"]}> --%>
        #<%= stats[:min_rank] %>
      </span>
    </h1>
    <h1 class={[common_stat_classes]}>
      Mean: <%!-- <span class={["text-[#{rating_to_color_map(stats[:max_rating_1m])}]"]}> --%>
      <span>
        #<%= stats[:average_rank] %>
      </span>
    </h1>
    <%!-- line break --%>
    <div class="border-b border-gray-200 mt-8"></div>
    <h1 class="font-time-traveler-pal font-gray text-4xl my-8 mx-auto text-center">
      Rank History
    </h1>
    <p class=" text-sm text-gray-500 mb-4">
      Rank over time might be a better way to assess skill because as the game gets less popular, higher ELO
      players will be shifted down to fill the gaps (lower ELO players are more likely to abandon the game).
    </p>
    <p class="text-sm text-gray-500 mb-4">
      This can be verified by checking that as Rank stays constant, ELO goes down (for example, a constant rank #2000 player in Season 9 might be Diamond II but in Season 11 they are Platinum III)
    </p>
    <canvas
      id="rank-history"
      phx-hook="RankHistory"
      data-points={Jason.encode!(stats[:rank_history])}
    >
    </canvas>
  </.async_result>
</div>
